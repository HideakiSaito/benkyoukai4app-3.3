api.easy_gantt_data do
  api.start_date @start_date
  api.end_date @end_date

  api_render_columns(api, @query)
  api_render_projects(api, @projects)

  api.array :issues do
    @issues.each do |issue|
      # call_hook :view_easy_gantt_issue_top, :api => api, :project => @project, :issue => issue, :query => @query
      api.issue do
        api.id issue.id
        api.name issue.subject
        api.start_date issue.start_date
        api.due_date issue.due_date
        api.estimated_hours issue.estimated_hours
        api.done_ratio issue.done_ratio
        #css = issue.css_classes
        #css << ' issue-overdue' if issue.overdue?
        api.css ' closed' if issue.closed?
        api.fixed_version_id issue.fixed_version_id
        api.overdue issue.overdue?
        api.parent_issue_id issue.parent_id
        api.project_id issue.project_id
        api.tracker_id issue.tracker_id
        api.priority_id issue.priority_id
        api.status_id issue.status_id
        api.assigned_to_id issue.assigned_to_id

        api.is_planned !!issue.project.try(:is_planned)

        api.permissions do
          api.editable issue.gantt_editable?
        end

        api.array :columns do
          @query.columns.each do |c|
            api.column do
              api.name c.name
              api.value c.value(issue).to_s
            end
          end
        end
        # call_hook :view_easy_gantt_issue_inner_bottom, :api => api, :project => @project, :issue => issue, :query => @query
      end
      # call_hook :view_easy_gantt_issue_bottom, :api => api, :project => @project, :issue => issue, :query => @query
    end
  end
  api.array :relations do
    @relations.each do |rel|
      api.relation do
        api.id rel.id
        api.source_id rel.issue_from_id
        api.target_id rel.issue_to_id
        api.type rel.relation_type
        api.delay rel.delay.to_i
      end

    end
  end

  api_render_versions(api, @versions)

  if EasySetting.value(:easy_gantt_show_holidays) && params[:subproject_loading].blank?
    api_render_holidays(api, @start_date - 1.month, @end_date + 1.month)
  end

  # Already there
  if params[:subproject_loading].nil?
    api.schemes do
      api_render_scheme(api, IssuePriority)
      api_render_scheme(api, IssueStatus)
      api_render_scheme(api, Tracker)
    end
  end

end
